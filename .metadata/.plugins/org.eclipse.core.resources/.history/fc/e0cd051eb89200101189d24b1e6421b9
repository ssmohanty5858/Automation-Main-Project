package util;

import org.testng.Reporter;

import java.io.File;
import java.io.OutputStream;
import java.io.PrintStream;
import java.nio.charset.StandardCharsets;
import java.nio.file.Path;
import java.nio.file.Paths;

public final class ReporterConsoleBridge {
  private ReporterConsoleBridge() {}

  public static void install() {
    final PrintStream originalOut = System.out;

    OutputStream tee = new OutputStream() {
      private final StringBuilder buf = new StringBuilder();
      @Override public void write(int b) {
        char c = (char) b;
        buf.append(c);
        if (c == '\n') {
          String line = buf.toString();
          originalOut.print(line);                        // keep console
          Reporter.log(escape(line), false);              // into TestNG logs (picked by our reporter)
          buf.setLength(0);
        }
      }
      private String escape(String s) {
        return s.replace("&","&amp;").replace("<","&lt;").replace(">","&gt;");
      }
    };

    System.setOut(new PrintStream(tee, true, StandardCharsets.UTF_8));
  }
  public static void logArtifact(String label, Path file) {
	    if (file == null) return;

	    // resolve relative to test-output so links work in the emailable report & CI artifacts
	    Path outRoot = Paths.get(System.getProperty("testng.report.output", "test-output")).toAbsolutePath();
	    Path abs = file.toAbsolutePath();
	    Path rel = abs.startsWith(outRoot) ? outRoot.relativize(abs) : abs;  // fallback to abs if outside
	    String href = rel.toString().replace(File.separatorChar, '/');

	    Reporter.setEscapeHtml(false); // allow HTML in Reporter.log
	    Reporter.log(
	        "<div>ðŸ”— <a target='_blank' href='" + href + "'>" +
	        (label == null ? "Open log" : escape(label)) +
	        "</a></div>",
	        true
	    );
	  }

	  private static String escape(String s) {
	    return s.replace("&","&amp;").replace("<","&lt;").replace(">","&gt;");
	  }
}
